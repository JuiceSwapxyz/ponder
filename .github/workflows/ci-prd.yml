name: JuiceSwap Ponder PRD CI/CD

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      reset_schema:
        description: 'Create new schema version (resets database)'
        required: false
        default: false
        type: boolean


env:
  NODE_VERSION: '20'
  DOCKER_TAGS: dfxswiss/juiceswap-ponder:latest
  DEPLOY_INFO: ${{ github.ref_name }}-${{ github.sha }}
  AZURE_RESOURCE_GROUP: rg-dfx-api-prd
  AZURE_CONTAINER_APP: ca-dfx-jsp-prd

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npx tsc --noEmit

      - name: Run tests
        run: npm test
        continue-on-error: true  # Tests not yet implemented

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_TAGS }}
          build-args: |
            NODE_ENV=production

  deploy:
    name: Deploy to PRD
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate schema version
        id: schema_version
        run: |
          if [ ! -f ponder.schema.ts ]; then
            echo "ERROR: ponder.schema.ts not found!"
            exit 1
          fi

          # Compute SHA256 hash of schema file (first 12 chars for readability)
          SCHEMA_HASH=$(sha256sum ponder.schema.ts | cut -c1-12)
          echo "Schema hash: $SCHEMA_HASH"

          # Use manual override if reset_schema requested, otherwise use hash
          if [ "${{ inputs.reset_schema }}" == "true" ]; then
            VERSION="manual-${{ github.run_number }}"
            echo "Using manual reset version: $VERSION"
          else
            VERSION="auto-$SCHEMA_HASH"
            echo "Using automatic version: $VERSION"
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Final PONDER_SCHEMA_VERSION: $VERSION"

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.DFX_PRD_CREDENTIALS }}

      - name: Update Azure Container App
        uses: azure/CLI@v2
        with:
          inlineScript: |
            VERSION="${{ steps.schema_version.outputs.version }}"
            echo "Updating container app with schema version: $VERSION"

            CURRENT_REVISION=$(az containerapp revision list \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --name ${{ env.AZURE_CONTAINER_APP }} \
              --query "[?properties.active].name" \
              --output tsv | head -1)

            echo "Current active revision: $CURRENT_REVISION"

            az containerapp update \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --name ${{ env.AZURE_CONTAINER_APP }} \
              --image ${{ env.DOCKER_TAGS }} \
              --set-env-vars DEPLOY_INFO=${{ env.DEPLOY_INFO }} PONDER_SCHEMA_VERSION=$VERSION

            if [ -n "$CURRENT_REVISION" ]; then
              echo "Deactivating previous revision: $CURRENT_REVISION"
              az containerapp revision deactivate \
                --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
                --name ${{ env.AZURE_CONTAINER_APP }} \
                --revision $CURRENT_REVISION
            else
              echo "No previous revision to deactivate"
            fi

      - name: Logout from Azure
        run: |
          az logout
        if: always()