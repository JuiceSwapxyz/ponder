import { Command } from '@oclif/core';
export default class CodegenCommand extends Command {
    static args: {
        path: import("@oclif/core/interfaces").Arg<string, Record<string, unknown>>;
    };
    static description: string;
    static examples: string[];
    static flags: {
        watch: import("@oclif/core/interfaces").BooleanFlag<boolean>;
        outFile: import("@oclif/core/interfaces").OptionFlag<string, import("@oclif/core/interfaces").CustomOptions>;
        camelCase: import("@oclif/core/interfaces").BooleanFlag<boolean>;
        envFile: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        excludePattern: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        includePattern: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        logLevel: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        print: import("@oclif/core/interfaces").BooleanFlag<boolean>;
        runtimeEnums: import("@oclif/core/interfaces").BooleanFlag<boolean>;
        typeOnlyImports: import("@oclif/core/interfaces").BooleanFlag<boolean>;
        verify: import("@oclif/core/interfaces").BooleanFlag<boolean>;
        noDomain: import("@oclif/core/interfaces").BooleanFlag<boolean>;
    };
    private isDataDir;
    private runCodegen;
    run(): Promise<void>;
}
